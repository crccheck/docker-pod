filter {
  # TODO split this up into multiple files
  # TODO do I even need this if statement?
  if [type] == "mysql-general" {
    # mysql logs sometimes do not have timestamp fields and use spaces instead.
    # events without timstamps merge with previous & possibly unrelated event.
    # http://pad.yohdah.com/193/mysql-general-query-logstash
    multiline {
      pattern => "^\s"
      what => "previous"
    }

    # pull out the mysql_timestamp (like, "120707  0:40:34")
    grok {
      match => [ "message", "^%{NUMBER:date} *%{NOTSPACE:time}" ]
      add_field => [ "mysql_timestamp", "%{date} %{time}" ]
    }

    # parse the mysql_timestamp, "hour" which could be one or two digits.
    date {
      match => [ "mysql_timestamp", "YYMMdd H:mm:ss", "YYMMdd HH:mm:ss" ]
    }

    # Now split up the multiline again, which keeps the timestamp for all split
    # out events. The defaults here are fine as they split '@message' by '\n'
    split { }
  }
  if [type] == "mysql-slow" {
    # https://github.com/logstash/cookbook/blob/gh-pages/recipes/mysql/mysql-slow.conf
    grok {
      singles => true
      pattern => [
        "^# User@Host: %{USER:user}(?>\[[^\]]+\])? @ %{HOST:host} \[%{IP:ip}?\]",
        "^# Query_time: %{NUMBER:duration:float} Lock_time: %{NUMBER:lock_wait:float} Rows_sent: %{NUMBER:results:int} \s*Rows_examined: %{NUMBER:scanned:int}",
        "^SET timestamp=%{NUMBER:timestamp};"
      ]
    }

    multiline {
      pattern => "^# Time: "
      what => next
    }

    multiline {
      pattern => "^# User@Host: "
      negate => true
      what => previous
    }
  }
}
